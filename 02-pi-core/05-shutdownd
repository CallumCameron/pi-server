#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" &&
source "${DIR}/common.bash" &&


# Remove old supervisor-managed config if it exists
SUPERVISOR_DST='/etc/supervisor/conf.d/shutdownd.conf'
if [ -f "${SUPERVISOR_DST}" ]; then
    sudo systemctl stop supervisor.service &&
    sudo rm "${SUPERVISOR_DST}" &&
    sudo systemctl start supervisor.service || exit 1
fi


# Setup user
NEW_USER='shutdownd'

if ! grep "${NEW_USER}" '/etc/passwd' &>/dev/null; then
    sudo adduser --disabled-login --no-create-home --shell /usr/sbin/nologin --gecos "${NEW_USER}" "${NEW_USER}" || exit 1
fi

sudo passwd -l "${NEW_USER}" &&
sudo chsh -s /usr/sbin/nologin "${NEW_USER}" &&


# Setup actual script
sed-install "${DIR}/shutdownd" "${PI_SERVER_SHUTDOWND_SCRIPT}" \
            "${PI_SERVER_WEB_PAGE_HEADER}" \
            "${PI_SERVER_WEB_PAGE_FOOTER}" \
            "${PI_SERVER_SHUTDOWND_PORT}" &&
sudo chmod a=rx "${PI_SERVER_SHUTDOWND_SCRIPT}" &&


# Setup permissions so the new user can call shutdown - and only shutdown - through sudo
SUDOERS_DST='/etc/sudoers.d/shutdownd' &&
sed-install "${DIR}/sudoers-shutdownd-template" "${SUDOERS_DST}" \
            "$(hostname)" &&
sudo chmod ug=r "${SUDOERS_DST}" &&
sudo chmod o-rwx "${SUDOERS_DST}" &&


# Set it up to run at boot
install-systemd-service "${DIR}/${PI_SERVER_SHUTDOWND_SERVICE}" \
                        "${PI_SERVER_SHUTDOWND_SCRIPT}" &&
sudo systemctl enable "${PI_SERVER_SHUTDOWND_SERVICE}" &&
sudo touch "${PI_SERVER_CRON_PAUSE_DIR}/${PI_SERVER_SHUTDOWND_SERVICE}" &&


# Firewall
"${PI_SERVER_IPTABLES_PORT_SCRIPT}" open-at-boot "${PI_SERVER_SHUTDOWND_PORT}" tcp &&
"${PI_SERVER_IPTABLES_PORT_SCRIPT}" open "${PI_SERVER_SHUTDOWND_PORT}" tcp &&


sudo systemctl restart "${PI_SERVER_SHUTDOWND_SERVICE}"
