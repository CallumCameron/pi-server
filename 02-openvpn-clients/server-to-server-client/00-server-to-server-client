#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

OPENVPN_CERT='/etc/pi-certs/openvpn-client.crt'
OPENVPN_KEY='/etc/pi-certs/openvpn-client.key'
CA_CERT='/etc/pi-certs/ca.crt'
CRL='/etc/pi-certs/crl'

function cert-check()
{
    echo "Certificates not present; not going any further"
    echo "Put the certificates at:"
    echo "    Client certificate: ${OPENVPN_CERT}"
    echo "    Client private key: ${OPENVPN_KEY}"
    echo "    CA certificate: ${CA_CERT}"
    echo "    CRL: ${CRL}"
    exit 1
}

test ! -e "${OPENVPN_CERT}" && cert-check
test ! -e "${OPENVPN_KEY}" && cert-check
test ! -e "${CA_CERT}" && cert-check
test ! -e "${CRL}" && cert-check

sudo chown root:root "${OPENVPN_CERT}" "${OPENVPN_KEY}" "${CA_CERT}" "${CRL}" &&
sudo chmod u=r "${OPENVPN_CERT}" "${OPENVPN_KEY}" "${CA_CERT}" "${CRL}" &&
sudo chmod go-rwx "${OPENVPN_KEY}" &&
sudo chmod go-wx "${OPENVPN_CERT}" "${CA_CERT}" "${CRL}" &&


printf "Enter the address of the server to connect to: " &&
read VPN_SERVER &&

printf "Enter the LAN subnet that this client is on (script assumes this is a /24): " &&
read LAN_SUBNET &&

CONFIG_SRC="${DIR}/client-conf-template" &&
CONFIG_DST='/etc/openvpn/openvpn-client.conf' &&

TMPFILE="$(mktemp)" &&
cp "${CONFIG_SRC}" "${TMPFILE}" &&
sed -i "s/@@@@@1@@@@@/${VPN_SERVER}/g" "${TMPFILE}" &&
sudo cp "${TMPFILE}" "${CONFIG_DST}" &&
sudo chown root:root "${CONFIG_DST}" &&
sudo chmod u=r "${CONFIG_DST}" &&
sudo chmod go-rwx "${CONFIG_DST}" &&

sudo service openvpn restart &&

cat <<EOF
On the server, create a file /etc/openvpn/client-config.d/<common name of this client's certificate> containing the following line:

iroute ${LAN_SUBNET} 255.255.255.0


On the server, add the following lines to /etc/openvpn/server-to-server-clients:

route ${LAN_SUBNET} 255.255.255.0
push "route ${LAN_SUBNET} 255.255.255.0"


Setup routes on both routers directing traffic to the other network through the Pi.
EOF
