#!/bin/bash

DEFAULT_ROUTE='@@@@@1@@@@@'
FAKE_PI='@@@@@2@@@@@'
PI_VPN_NET='@@@@@3@@@@@'
INTERNET_IFACE='@@@@@4@@@@@'
LAN_IFACE='@@@@@5@@@@@'

sysctl -w net.ipv4.ip_forward=1

function iface-exists()
{
    ip a | grep "${1}" &>/dev/null
}

if [ ! -e /tmp/fakeRouter.done ] &&
   iface-exists lo &&
   iface-exists "${INTERNET_IFACE}" &&
   iface-exists "${LAN_IFACE}"; then

    ip route add default via "${DEFAULT_ROUTE}" dev "${INTERNET_IFACE}"

    iptables -A INPUT -i lo -j ACCEPT
    ipatbles -A INPUT -i "${LAN_IFACE}" -j ACCEPT
    iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    iptables -A INPUT -j DROP
    iptables -A FORWARD -i "${LAN_IFACE}" -j ACCEPT
    iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    iptables -A FORWARD -j DROP
    iptables -t nat -A POSTROUTING -o "${INTERNET_IFACE}" -j MASQUERADE

    # Port forward for VPN connection
    iptables -t nat -A PREROUTING -i "${INTERNET_IFACE}" -p tcp --dport 1194 -j DNAT --to "${FAKE_PI}:1194"
    iptables -I FORWARD -p tcp -d "${FAKE_PI}" --dport 1194 -j ACCEPT

    # Route for FakePi's VPN subnet (needed for single-machine clients)
    ip route add "${PI_VPN_NET}/24" via "${FAKE_PI}" dev "${LAN_IFACE}"

    EXTRA_SETUP='/etc/pi-server/fake-router-extra-setup'
    if [ -e "${EXTRA_SETUP}" ]; then
        source "${EXTRA_SETUP}"
    fi

    touch /tmp/fakeRouter.done
fi
