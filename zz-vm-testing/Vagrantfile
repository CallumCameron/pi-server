# -*- mode: ruby -*-
# vi: set ft=ruby :

required_plugins = %w( vagrant-reload )
required_plugins.each do |plugin|
  exec "vagrant plugin install #{plugin} && vagrant #{ARGV.join(" ")}" unless
    Vagrant.has_plugin? plugin || ARGV[0] == 'plugin'
end


INTERNET_MASK = "10.42.0.0"
INTERNET_IP = "10.42.0.2"
ROUTER1_WAN_IP = "10.42.0.3"
ROUTER2_WAN_IP = "10.42.0.4"

LAN1_MASK = "10.42.1.0"
ROUTER1_LAN_IP = "10.42.1.2"
PI1_IP = "10.42.1.3"
PI1_VPN_MASK = "10.42.11.0"

LAN2_MASK = "10.42.2.0"
ROUTER2_LAN_IP = "10.42.2.2"
PI2_IP = "10.42.2.3"
PI2_VPN_MASK = "10.42.12.0"


def router(config, name, wan_ip, lan_ip, pi_ip, pi_vpn_mask)
  config.vm.define name do |box|
    box.vm.hostname = name
    box.vm.network "private_network", ip: wan_ip
    box.vm.network "private_network", ip: lan_ip
    box.vm.provision "ansible" do |ansible|
      ansible.playbook = "setup/router.yml"
      ansible.extra_vars = {
        internet_ip: INTERNET_IP,
        pi_ip: pi_ip,
        pi_vpn_mask: pi_vpn_mask
      }
    end
    box.vm.provision :reload
  end
end


def pi(config, name, pi_ip, router_lan_ip)
  config.vm.define name do |box|
    box.vm.hostname = name
    box.vm.network "private_network", ip: pi_ip
    box.vm.provision "ansible" do |ansible|
      ansible.playbook = "setup/pi.yml"
      ansible.extra_vars = {
        router_ip: router_lan_ip
      }
    end
    box.vm.provision :reload
  end
end


Vagrant.configure("2") do |config|
  config.vm.box = "debian/stretch64"

  config.vm.define "internet" do |internet|
    internet.vm.hostname = "internet"
    internet.vm.network "private_network", ip: INTERNET_IP
    internet.vm.provision "ansible" do |ansible|
      ansible.playbook = "setup/internet.yml"
    end
    internet.vm.provision :reload
  end

  router config, "router1", ROUTER1_WAN_IP, ROUTER1_LAN_IP, PI1_IP, PI1_VPN_MASK
  router config, "router2", ROUTER2_WAN_IP, ROUTER2_LAN_IP, PI2_IP, PI2_VPN_MASK

  pi config, "pi1", PI1_IP, ROUTER1_LAN_IP
  pi config, "pi2", PI2_IP, ROUTER2_LAN_IP
end
