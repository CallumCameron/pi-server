# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'json'

required_plugins = %w( vagrant-reload )
required_plugins.each do |plugin|
  exec "vagrant plugin install #{plugin} && vagrant #{ARGV.join(" ")}" unless
    Vagrant.has_plugin? plugin || ARGV[0] == 'plugin'
end

# Config defines the IP addresses of the VMs, so it can be shared with ansible
$c = JSON.parse(File.read('config.json'))


def internet(config)
  config.vm.define "internet" do |internet|
    internet.vm.hostname = "internet"
    internet.vm.network "private_network", ip: $c["internet_ip"]
    internet.vm.provision "ansible" do |ansible|
      ansible.playbook = "setup/internet.yml"
      ansible.extra_vars = {
        nonexistent_wan_ip: $c["nonexistent_wan_ip"],
        lan1_mask: $c["lan1_mask"],
        lan2_mask: $c["lan2_mask"]
      }
    end
    internet.vm.provision :reload
  end
end


def router(config, name, wan_ip, lan_ip, pi_ip, pi_vpn_mask)
  config.vm.define name do |box|
    box.vm.hostname = name
    box.vm.network "private_network", ip: wan_ip
    box.vm.network "private_network", ip: lan_ip
    box.vm.provision "ansible" do |ansible|
      ansible.playbook = "setup/router.yml"
      ansible.extra_vars = {
        internet_ip: $c["internet_ip"],
        pi_ip: pi_ip,
        pi_vpn_mask: pi_vpn_mask
      }
    end
    box.vm.provision :reload
  end
end


def pi(config, name, pi_ip, router_lan_ip)
  config.vm.define name do |box|
    box.vm.hostname = name
    box.vm.network "private_network", ip: pi_ip
    box.vm.provision "ansible" do |ansible|
      ansible.playbook = "setup/pi.yml"
      ansible.extra_vars = {
        router_ip: router_lan_ip
      }
    end
    box.vm.provision :reload
  end
end


Vagrant.configure("2") do |config|
  config.vm.box = "debian/stretch64"

  internet config

  router config, "router1", $c["router1_wan_ip"], $c["router1_lan_ip"], $c["pi1_ip"], $c["pi1_vpn_mask"]
  router config, "router2", $c["router2_wan_ip"], $c["router2_lan_ip"], $c["pi2_ip"], $c["pi2_vpn_mask"]

  pi config, "pi1", $c["pi1_ip"], $c["router1_lan_ip"]
  pi config, "pi2", $c["pi2_ip"], $c["router2_lan_ip"]
end
