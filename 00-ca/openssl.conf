[ ca ]
default_ca = local_ca

[ local_ca ]
dir = $ENV::CA_DIR
RANDFILE = $dir/.rand
new_certs_dir = $dir
certificate = $dir/ca/ca.crt
private_key = $dir/ca/ca.key
certs = $dir/data/certs
crl_dir = $dir/data/crl
database = $dir/data/index.txt
serial = $dir/data/serial.txt
crl = $dir/crl

default_days = 3650
default_crl_days= 3650
default_md = sha256
preserve = no
email_in_dn = no
x509_extensions = usr_cert
name_opt = ca_default
cert_opt = ca_default

policy = policy_anything

[ policy_anything ]
countryName = supplied
stateOrProvinceName = optional
localityName = optional
organizationName = optional
organizationalUnitName = optional
commonName = supplied
name = optional
emailAddress = optional

[ req ]
default_bits = 2048
default_md = sha256
x509_extensions = v3_ca
req_extensions = v3_req
input_password = stdin
output_password = stdin
string_mask = default
distinguished_name = req_distinguished_name

[ req_distinguished_name ]
countryName = Country Name (2 letter code)
countryName_default = GB
countryName_min = 2
countryName_max = 2

organizationName = Organization Name
organizationName_default = Callum J. Cameron

commonName = Common Name (address/hostname of the server, or of the client this certificate belongs to)
commonName_max = 64

[ v3_ca ]
basicConstraints = CA:TRUE
keyUsage = cRLSign,keyCertSign
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always

[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation,digitalSignature,keyEncipherment













# openssl_conf      = openssl_init

# [ openssl_init ]
# engines           = engine_section

# # To use this configuration file with the "-extfile" option of the
# # "openssl x509" utility, name here the section containing the
# # X.509v3 extensions to use:
# # extensions      =
# # (Alternatively, use a configuration file that has only
# # X.509v3 extensions in its main [= default] section.)

# [ req_distinguished_name ]


# # SET-ex3         = SET extension number 3

# unstructuredName      = An optional company name

# [ usr_cert ]

# # These extensions are added when 'ca' signs a request.

# # This goes against PKIX guidelines but some CAs do it and some software
# # requires this to avoid interpreting an end user certificate as a CA.

# basicConstraints=CA:FALSE

# # Here are some examples of the usage of nsCertType. If it is omitted
# # the certificate can be used for anything *except* object signing.

# # This is OK for an SSL server.
# # nsCertType          = server

# # For an object signing certificate this would be used.
# # nsCertType = objsign

# # For normal client use this is typical
# # nsCertType = client, email

# # and for everything including object signing:
# # nsCertType = client, email, objsign

# # This is typical in keyUsage for a client certificate.
# # keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# # This will be displayed in Netscape's comment listbox.
# nsComment         = "Easy-RSA Generated Certificate"

# # PKIX recommendations harmless if included in all certificates.
# subjectKeyIdentifier=hash
# authorityKeyIdentifier=keyid,issuer:always
# extendedKeyUsage=clientAuth
# keyUsage = digitalSignature


# # This stuff is for subjectAltName and issuerAltname.
# # Import the email address.
# # subjectAltName=email:copy
# subjectAltName=$ENV::KEY_ALTNAMES

# # Copy subject details
# # issuerAltName=issuer:copy

# #nsCaRevocationUrl        = http://www.domain.dom/ca-crl.pem
# #nsBaseUrl
# #nsRevocationUrl
# #nsRenewalUrl
# #nsCaPolicyUrl
# #nsSslServerName

# [ server ]

# # JY ADDED -- Make a cert with nsCertType set to "server"
# basicConstraints=CA:FALSE
# nsCertType                     = server
# nsComment                      = "Easy-RSA Generated Server Certificate"
# subjectKeyIdentifier=hash
# authorityKeyIdentifier=keyid,issuer:always
# extendedKeyUsage=serverAuth
# keyUsage = digitalSignature, keyEncipherment
# subjectAltName=$ENV::KEY_ALTNAMES



# [ crl_ext ]

# # CRL extensions.
# # Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# # issuerAltName=issuer:copy
# authorityKeyIdentifier=keyid:always,issuer:always

# [ engine_section ]
# #
# # If you are using PKCS#11
# # Install engine_pkcs11 of opensc (www.opensc.org)
# # And uncomment the following
# # verify that dynamic_path points to the correct location
# #
# #pkcs11 = pkcs11_section

# [ pkcs11_section ]
# engine_id = pkcs11
# dynamic_path = /usr/lib/engines/engine_pkcs11.so
# MODULE_PATH = $ENV::PKCS11_MODULE_PATH
# PIN = $ENV::PKCS11_PIN
# init = 0
