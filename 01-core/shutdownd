#!/usr/bin/env python

import BaseHTTPServer
import subprocess
import sys
import time

WEBPAGE_HEADER = "@@@@@1@@@@@"
WEBPAGE_FOOTER = "@@@@@2@@@@@"
SHUTDOWN_URL = "/shutdown"
RESTART_URL = "/restart"

class Responder(BaseHTTPServer.BaseHTTPRequestHandler):
    def construct_response(self, title, body):
        page = u""
        try:
            with open(WEBPAGE_HEADER) as f:
                page += unicode(f.read())
            page = page.replace(u"#####1#####", unicode(title))
        except IOError:
            page += u"<html><head><title>%s</title></head><body>" % unicode(title)

        page += u"<div class=\"container\"><div class=\"row\">" + unicode(body) + u"</div></div>"

        try:
            with open(WEBPAGE_FOOTER) as f:
                page += unicode(f.read())
        except IOError:
            page += u"</body></html>"

        return page.encode("utf-8")

    def respond(self, title, body):
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(self.construct_response(title, body))

    def fail(self):
        self.send_response(404)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(self.construct_response("Error", "<h1>Error!</h1><p>The requested page could not be found</p>"))

    def main_page(self, title, url):
        self.respond(title, """
<h1>%s</h1>
<p>%s the Raspberry Pi?</p>
<form action="%s" method="post">
  <button class="form-control btn btn-default" type="submit">%s</button>
  <script type="text/javascript">
    document.write('<a class="form-control btn btn-default" href="http://' + window.location.hostname + '/">Cancel</a>');
  </script>
</form>
""" % (title, title, url, title))

    def do_GET(self):
        if self.path == SHUTDOWN_URL:
            self.main_page("Shut down", SHUTDOWN_URL)
        elif self.path == RESTART_URL:
            self.main_page("Restart", RESTART_URL)
        else:
            self.fail()

    def do_POST(self):
        if self.path == SHUTDOWN_URL:
            self.respond("Shut down", "<h1>Shut down</h1><p>The Raspberry Pi is now shutting down.</p><p>Once all the lights except the red one are off, then it is safe to disconnect the power.</p><p>Reconnect the power to start the Pi up again.</p>")
            time.sleep(1)
            subprocess.call(["sudo", "shutdown", "-h", "now"])
            sys.exit(0)
        elif self.path == RESTART_URL:
            self.respond("Restart", "<h1>Restart</h1><p>The Raspberry Pi is now restarting.</p><p>This will take a few minutes.</p>")
            time.sleep(1)
            subprocess.call(["sudo", "reboot"])
            sys.exit(0)
        else:
            self.fail()

server_address = ('', 23145)
httpd = BaseHTTPServer.HTTPServer(server_address, Responder)
httpd.serve_forever()
